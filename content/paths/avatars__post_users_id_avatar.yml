---
operationId: post_users_id_avatar

x-box-tag: avatars

summary: Upload / update user avatar

tags:
  - User avatars

description: |-
  Uploads or updates a user avatar.

parameters:
  - $ref: ../attributes/user_id.yml

requestBody:
  content:
    multipart/form-data:
      schema:
        type: object
        required:
          - pic
        properties:
          pic:
            type: string
            format: binary
            description: |-
              The image file to be uploaded to Box.
              Accepted file formats are `.jpg` or `.png`.
              The maximum file size is 1MB.
responses:
  200:
    description: |-
      Returns the `pic_urls` object with URLs to existing
      user avatars that were updated.
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/UserAvatar'
  201:
    description: |-
      Returns the `pic_urls` object with URLS to user avatars
      uploaded to Box with the request.
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/UserAvatar'
  400:
    description: |-
      Returns an error when an image is not valid or
      not included in the request.
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/ClientError'
  403:
    description: |-
      Returns an error if the user does not have permissions
      necessary to upload an avatar or is not activated.
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/ClientError'
  404:
    description: |-
      Returns an error if the user does not exist or cannot be found.
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/ClientError'

  500:
    description: |-
      Returns an error if the user avatar is not saved successfully.
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/ClientError'
  503:
    description: |-
      Returns an error if the user avatar is not saved successfully.
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/ClientError'
  default:
    description: An unexpected client error.
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/ClientError'
